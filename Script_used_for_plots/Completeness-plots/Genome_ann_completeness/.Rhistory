######################################
#
# BUSCO summary figure
# @version 4.0.0
# @since BUSCO 2.0.0
#
# Copyright (c) 2016-2023, Evgeny Zdobnov (ez@ezlab.org)
# Licensed under the MIT license. See LICENSE.md file.
#
######################################
# Load the required libraries
#install.packages("svglite")
library(svglite)
library(ggplot2)
library("grid")
# !!! CONFIGURE YOUR PLOT HERE !!!
# Output
my_output <- paste("Busco_ass_ann.png",sep="/")
my_width <- 35
my_height <-15
my_unit <- "cm"
# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.35
# Legend
my_title <- ""
# Font
my_family <- "sans"
my_size_ratio <- 1
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Assembly', 'Assembly', 'Assembly', 'Assembly', 'Annotation', 'Annotation', 'Annotation', 'Annotation')
my_species <- factor(my_species)
my_species <- factor(my_species,levels= c("Annotation","Assembly")) # reorder your species here just by changing the values in the vector :
my_percentage <- c(96.6, 0.3, 0.5, 2.6, 87.5, 0.4, 2.1, 10.0)
my_values <- c(8053, 22, 39, 221, 7295, 35, 176, 832)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 2
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","10","20","30","40","50","60","70","80","90","100"), breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(fill = "transparent")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(4)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(2)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.4, "cm")) +
theme(axis.ticks.y = element_line(colour="#222222", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*8*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
figure
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
# ... (Previous code remains the same)
# Save as SVG
svg_output <- paste("Busco_ass_ann.svg", sep = "/")
ggsave(figure, file = svg_output, width = my_width, height = my_height, unit = my_unit)
# Save as PDF
pdf_output <- paste("Busco_ass_ann.pdf", sep = "/")
ggsave(figure, file = pdf_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
print("Done")
######################################
#
# BUSCO summary figure
# @version 4.0.0
# @since BUSCO 2.0.0
#
# Copyright (c) 2016-2023, Evgeny Zdobnov (ez@ezlab.org)
# Licensed under the MIT license. See LICENSE.md file.
#
######################################
# Load the required libraries
#install.packages("svglite")
library(svglite)
library(ggplot2)
library("grid")
# !!! CONFIGURE YOUR PLOT HERE !!!
# Output
my_output <- paste("Busco_ass_ann.png",sep="/")
my_width <- 35
my_height <-15
my_unit <- "cm"
# Colors
my_colors <- c("#56B4E9", "#3492C7", "#F0E442", "#F04442")
# Bar height ratio
my_bar_height <- 0.35
# Legend
my_title <- ""
# Font
my_family <- "sans"
my_size_ratio <- 1
# !!! SEE YOUR DATA HERE !!!
# Your data as generated by python, remove or add more
my_species <- c('Assembly', 'Assembly', 'Assembly', 'Assembly', 'Annotation', 'Annotation', 'Annotation', 'Annotation')
my_species <- factor(my_species)
my_species <- factor(my_species,levels= c("Annotation","Assembly")) # reorder your species here just by changing the values in the vector :
my_percentage <- c(96.6, 0.3, 0.5, 2.6, 87.5, 0.4, 2.1, 10.0)
my_values <- c(8053, 25, 39, 221, 7295, 35, 176, 832)
######################################
######################################
######################################
# Code to produce the graph
labsize = 1
if (length(levels(my_species)) > 10){
labsize = 2
}
print("Plotting the figure ...")
category <- c(rep(c("S","D","F","M"),c(1)))
category <-factor(category)
category = factor(category,levels(category)[c(4,1,2,3)])
df = data.frame(my_species,my_percentage,my_values,category)
figure <- ggplot() +
geom_bar(aes(y = my_percentage, x = my_species, fill = category), position = position_stack(reverse = TRUE), data = df, stat="identity", width=my_bar_height) +
coord_flip() +
theme_gray(base_size = 8) +
scale_y_continuous(labels = c("0","10","20","30","40","50","60","70","80","90","100"), breaks = c(0,10,20,30,40,50,60,70,80,90,100)) +
scale_fill_manual(values = my_colors,labels =c(" Complete (C) and single-copy (S)  ",
" Complete (C) and duplicated (D)",
" Fragmented (F)  ",
" Missing (M)")) +
ggtitle(my_title) +
xlab("") +
ylab("\n%BUSCOs") +
theme(plot.title = element_text(family=my_family, hjust=0.5, colour = "black", size = rel(2.2)*my_size_ratio, face = "bold")) +
theme(legend.position="top",legend.title = element_blank()) +
theme(legend.text = element_text(family=my_family, size = rel(1.2)*my_size_ratio)) +
theme(panel.background = element_rect(fill = "transparent")) +
theme(panel.grid.minor = element_blank()) +
theme(panel.grid.major = element_blank()) +
theme(axis.text.y = element_text(family=my_family, colour = "black", size = rel(4)*my_size_ratio)) +
theme(axis.text.x = element_text(family=my_family, colour = "black", size = rel(2)*my_size_ratio)) +
theme(axis.line = element_line(size=1*my_size_ratio, colour = "black")) +
theme(axis.ticks.length = unit(.4, "cm")) +
theme(axis.ticks.y = element_line(colour="#222222", size = 0)) +
theme(axis.ticks.x = element_line(colour="#222222")) +
theme(axis.ticks.length = unit(0.2, "cm")) +
theme(axis.title.x = element_text(family=my_family, size=rel(1.2)*my_size_ratio)) +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
for(i in rev(c(1:length(levels(my_species))))){
detailed_values <- my_values[my_species==my_species[my_species==levels(my_species)[i]]]
total_buscos <- sum(detailed_values)
figure <- figure +
annotate("text", label=paste("C:", detailed_values[1] + detailed_values[2], " [S:", detailed_values[1], ", D:", detailed_values[2], "], F:", detailed_values[3], ", M:", detailed_values[4], ", n:", total_buscos, sep=""),
y=3, x = i, size = labsize*8*my_size_ratio, colour = "black", hjust=0, family=my_family)
}
figure
ggsave(figure, file=my_output, width = my_width, height = my_height, unit = my_unit)
# ... (Previous code remains the same)
# Save as SVG
svg_output <- paste("Busco_ass_ann.svg", sep = "/")
ggsave(figure, file = svg_output, width = my_width, height = my_height, unit = my_unit)
# Save as PDF
pdf_output <- paste("Busco_ass_ann.pdf", sep = "/")
ggsave(figure, file = pdf_output, width = my_width, height = my_height, unit = my_unit)
print("Done")
print("Done")
